// <auto-generated />
using System;
using Aimtracker.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace Aimtracker.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.13")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn);

            modelBuilder.Entity("Aimtracker.Models.Biathlete", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn);

                    b.Property<string>("FullName")
                        .HasColumnType("text");

                    b.Property<string>("IbuID")
                        .HasColumnType("text");

                    b.Property<string>("Image")
                        .HasColumnType("text");

                    b.Property<int>("MaxHeartRate")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Biathletes");
                });

            modelBuilder.Entity("Aimtracker.Models.Location", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn);

                    b.Property<double>("Latitude")
                        .HasColumnType("double precision");

                    b.Property<double>("Longitude")
                        .HasColumnType("double precision");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Locations");
                });

            modelBuilder.Entity("Aimtracker.Models.Series", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn);

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Stance")
                        .HasColumnType("text");

                    b.Property<int>("TrainingSessionId")
                        .HasColumnType("integer");

                    b.Property<int>("WeatherId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("TrainingSessionId");

                    b.HasIndex("WeatherId");

                    b.ToTable("Series");
                });

            modelBuilder.Entity("Aimtracker.Models.Shot", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn);

                    b.Property<double>("DurationInSeconds")
                        .HasColumnType("double precision");

                    b.Property<double>("FiringAngle")
                        .HasColumnType("double precision");

                    b.Property<int>("HeartRate")
                        .HasColumnType("integer");

                    b.Property<bool>("Result")
                        .HasColumnType("boolean");

                    b.Property<int>("SeriesId")
                        .HasColumnType("integer");

                    b.Property<int>("ShotNumber")
                        .HasColumnType("integer");

                    b.Property<double>("ShotXCord")
                        .HasColumnType("double precision");

                    b.Property<double>("ShotYCord")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.HasIndex("SeriesId");

                    b.ToTable("Shots");
                });

            modelBuilder.Entity("Aimtracker.Models.TrainingSession", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn);

                    b.Property<string>("Comments")
                        .HasColumnType("text");

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp without time zone");

                    b.Property<double>("HitStatistic")
                        .HasColumnType("double precision");

                    b.Property<string>("IbuID")
                        .HasColumnType("text");

                    b.Property<int?>("LocationId")
                        .HasColumnType("integer");

                    b.Property<string>("ShootingId")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("LocationId");

                    b.ToTable("Shootings");
                });

            modelBuilder.Entity("Aimtracker.Models.Weather", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn);

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<int>("Dt")
                        .HasColumnType("integer");

                    b.Property<string>("Icon")
                        .HasColumnType("text");

                    b.Property<double>("Temp")
                        .HasColumnType("double precision");

                    b.Property<double>("Wind_deg")
                        .HasColumnType("double precision");

                    b.Property<double>("Wind_speed")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.ToTable("Weathers");
                });

            modelBuilder.Entity("Aimtracker.Models.Series", b =>
                {
                    b.HasOne("Aimtracker.Models.TrainingSession", null)
                        .WithMany("Results")
                        .HasForeignKey("TrainingSessionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Aimtracker.Models.Weather", "Weather")
                        .WithMany()
                        .HasForeignKey("WeatherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Weather");
                });

            modelBuilder.Entity("Aimtracker.Models.Shot", b =>
                {
                    b.HasOne("Aimtracker.Models.Series", null)
                        .WithMany("Shots")
                        .HasForeignKey("SeriesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Aimtracker.Models.TrainingSession", b =>
                {
                    b.HasOne("Aimtracker.Models.Location", "Location")
                        .WithMany()
                        .HasForeignKey("LocationId");

                    b.Navigation("Location");
                });

            modelBuilder.Entity("Aimtracker.Models.Series", b =>
                {
                    b.Navigation("Shots");
                });

            modelBuilder.Entity("Aimtracker.Models.TrainingSession", b =>
                {
                    b.Navigation("Results");
                });
#pragma warning restore 612, 618
        }
    }
}
